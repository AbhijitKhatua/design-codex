/** @typedef {import('vue-docgen-api').ParamTag} ParamTag */
/** @typedef {import('vue-docgen-cli').Templates[ 'component' ]} Component */

/** @type Component */
module.exports = function component( renderedUsage, doc, config, componentRelativePath ) {
	const { displayName, docsBlocks, tags } = doc;
	const { author, since, version } = /** @type {Record<string, ParamTag[]>} */ ( tags ?? {} );

	// Limit on-page navigation to headings level 2 and 3.
	const frontMatter = [ 'outline: [ 2, 3 ]' ];
	const componentName = displayName.slice( 3 );

	// Include a warning if the component is still in development
	const devWarning = componentRelativePath.includes( 'components-wip/' ) ?
		`
::: warning
This component is still under development. It is not yet available in releases of Codex.
:::
		` : '';

	// If there's a CSS-only version, split that part of the docs out so we can add it after
	// the Vue usage info.
	const cssOnlyHeading = '## CSS-only version';
	let hasCssOnlyVersion = false;
	let vueDocs = '';
	let cssOnlyDocs = '';
	if ( docsBlocks && docsBlocks.length > 0 ) {
		hasCssOnlyVersion = docsBlocks[ 0 ].includes( cssOnlyHeading );
		if ( hasCssOnlyVersion ) {
			const splitDocs = docsBlocks[ 0 ].split( cssOnlyHeading );
			vueDocs = splitDocs[ 0 ];
			cssOnlyDocs = cssOnlyHeading + splitDocs[ 1 ];
		}
	}

	return `
---
# This file is automatically generated; do not edit it directly.
# Edit component demos in packages/codex-docs/component-demos.
${frontMatter.join( '\n' )}
---

# ${componentName}

${devWarning}

${author ? author.map( ( a ) => `**Author**: ${a.description}` ).join( '\n' ) : ''}
${since ? `**Since** ${since[ 0 ].description}` : ''}
${version ? `**Version** ${version[ 0 ].description}` : ''}

${vueDocs || ( docsBlocks ? docsBlocks.join( '\n---\n' ) : '' )}

${renderedUsage.props.replace( '## Props', '### Props' )}
${renderedUsage.methods.replace( '## Methods', '### Methods' )}
${renderedUsage.events.replace( '## Events', '### Events' )}
${renderedUsage.slots.replace( '## Slots', '### Slots' )}

${cssOnlyDocs || ''}
`;
};
