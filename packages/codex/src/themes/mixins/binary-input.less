@import ( reference ) '@wikimedia/codex-design-tokens/theme-wikimedia-ui.less';

// Common styles for checkboxes and radios.
.cdx-mixin-binary-input() {
	position: relative;

	/* stylelint-disable-next-line selector-not-notation */
	&:not( &--inline ) {
		display: flex;
		// Since we have to use margin-right for inline inputs, use margin-bottom for stacked inputs
		// for consistency's sake.
		margin-bottom: @spacing-75;

		&:last-child {
			margin-bottom: 0;
		}
	}

	&--inline {
		display: inline-flex;
		// Use margin-right instead of left to avoid extra space at the beginning of a new line if
		// the inputs span multiple lines.
		margin-right: @spacing-100;
		// Avoid line break between icon and label text.
		white-space: nowrap;

		&:last-child {
			margin-right: 0;
		}
	}

	// TODO: CSS-only components may not have selector `.cdx-label` on <label> (See T353885)
	&__label,
	&__label.cdx-label {
		// This makes single-line labels only the width of their content and properly aligns
		// multi-line labels with the input.
		// Must be inline-flex instead of inline-block to support `flex-direction: column` style on
		// the `cdx-label` class that places the description on a new line.
		display: inline-flex;
		// Create a stacking context by `position: relative` and `z-index` other than `auto`.
		position: relative;
		z-index: @z-index-stacking-0;
		padding-left: calc( @size-125 + @spacing-50 );
		line-height: @line-height-x-small;
	}

	// Special overrides for the Label component.
	&__label.cdx-label {
		padding-bottom: 0;

		.cdx-label__label__text {
			font-weight: @font-weight-normal;
		}
	}

	// TODO: CSS-only component may not have selector `.cdx-label` on <label> (See T353885)
	&--inline &__label {
		// Reset to inline to avoid extra space between input and label.
		display: inline;
	}

	// Custom-styled input that's visible to the user.
	&__icon {
		background-color: @background-color-base;
		position: absolute;
		left: 0;
		box-sizing: @box-sizing-base;
		min-width: @min-size-input-binary;
		min-height: @min-size-input-binary;
		width: @size-125;
		height: @size-125;
		border-width: @border-width-base;
		border-style: @border-style-base;
		transition-property: @transition-property-base;
		transition-duration: @transition-duration-base;
	}

	// HTML input element.
	&__input {
		// The actual input is visually hidden.
		opacity: 0;
		position: absolute;
		left: 0;
		// Render "on top of" the span, so that it's still clickable.
		z-index: @z-index-stacking-1;
		min-width: @min-size-input-binary;
		min-height: @min-size-input-binary;
		width: @size-125;
		height: @size-125;
		// Support Blink, Firefox, Safari: Normalize by removing user-agent stylesheet `margin`.
		margin: 0;
		font-size: inherit;
		cursor: inherit;
	}

	// Ensure that the input and label show hover cursor, when enabled.
	// The line with the :not() selector is meant to support CSS-only usage of a simple
	// label element with class `&__label`, rather than use of the Label component.
	&:hover > &__input:enabled,
	&:hover > &__input:enabled ~ .cdx-label .cdx-label__label,
	&:hover > &__input:enabled ~ &__label:not( .cdx-label ) {
		cursor: @cursor-base--hover;
	}
}
